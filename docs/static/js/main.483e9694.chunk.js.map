{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAgB,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,MAMlB,SAEI,uBACAO,KAAM,OACNC,MAAOT,EACPU,SArBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNhBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACXC,EADW,0DAC8CC,UAAUH,GADxD,sDAGEI,MAAOF,GAHT,cAGXG,EAHW,gBAIIA,EAAKC,OAJT,uBAIVC,EAJU,EAIVA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CAEHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZzB,kBAgBTM,GAhBS,4CAAH,sDCATO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAG/B,OACI,sBAAKc,UAAU,8DAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAKN,IACtB,kCAAKA,EAAL,WCJCO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAZ,SAAEA,GAAa,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA6BtC,OArBAC,qBAAY,WAERxB,EAASC,GACRwB,MAAK,SAAAC,GAIFH,EAAS,CACTf,KAAKkB,EACLL,SAAS,SAOd,CAACpB,IAKGqB,ED1BuBK,CAAa1B,GAA/Ba,EAHwB,EAG7BN,KAAYa,EAHiB,EAGjBA,QAEnB,OACI,qCACI,qBAAIJ,UAAU,sDAAd,eAAuEhB,KAEtEoB,GAAW,mBAAGJ,UAAU,qDAAb,qBAEhB,qBAAKA,UAAU,YAAf,SAIYH,EAAOJ,KAAK,SAAAC,GAAG,OACP,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEjB1BgB,EAAe,WAAO,IAAD,EAGMzC,mBAAS,CAAC,cAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAK9B,OACI,qCACI,sBAAK+B,UAAU,QAAf,UACI,+CACA,oEAGJ,cAAC,EAAD,CAAa/B,cAAiBA,IAC9B,uBAGA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MCnB/B6B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.483e9694.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            \r\n            setCategories(  cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n       \r\n\r\n    }\r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n\r\n            <input \r\n            type= \"text\"\r\n            value={inputValue}\r\n            onChange= {handleInputChange}>\r\n            </input>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n  export const getGifs = async(category)=> {\r\n        const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=wu4z4T4tdMJY06W97dQsCXxwpjv5sRrd`\r\n\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map (img => {\r\n\r\n            return {\r\n\r\n                id:img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n         return gifs;\r\n    }\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url} ) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__heartBeat animate__delay-1s\">\r\n            <img src = {url} alt={title}/>\r\n            <p> {title} </p>\r\n\r\n        </div>\r\n    )\r\n} \r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GiftGrid = ({category}) => {\r\n    \r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <> \r\n            <h3 className=\"animate__animated animate__fadeIn animate__delay-1s\">  {category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash animate__delay-1s\">Loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n\r\n\r\n                {\r\n                    images.map( img =>(\r\n                            <GifGridItem\r\n                            key = {img.id}\r\n                            {...img}\r\n                            /> \r\n                        ))\r\n                }\r\n\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category )=>{\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect ( ()=>{\r\n\r\n        getGifs( category )\r\n        .then(imgs =>{\r\n\r\n\r\n\r\n            setstate({    \r\n            data:imgs,\r\n            loading: false\r\n\r\n            });\r\n                \r\n\r\n        })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state\r\n\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GiftGrid } from './components/GiftGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['One punch'])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"title\">\r\n                <h2> GifExpertApp</h2>\r\n                <h4>Obten los Gif de todo tipo aqui</h4>\r\n             </div> \r\n\r\n            <AddCategory setCategories= { setCategories}/>\r\n            <hr/>\r\n\r\n        \r\n            <ul>\r\n                {\r\n                    categories.map( category =>(\r\n                        <GiftGrid\r\n                        key = {category}\r\n                        category = {category} />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp/> ,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}